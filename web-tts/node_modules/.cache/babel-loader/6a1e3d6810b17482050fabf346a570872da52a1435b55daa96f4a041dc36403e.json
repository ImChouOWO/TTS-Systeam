{"ast":null,"code":"var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar CubismConfig;\n(CubismConfig2 => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar config;\n(config2 => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter(item => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON) return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles(file => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach(texture => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter(file => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */(MotionPriority2 => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\"currentPriority\", \"reservePriority\", \"currentGroup\", \"currentIndex\", \"reservedGroup\", \"reservedIndex\", \"reservedIdleGroup\", \"reservedIdleIndex\"];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map(key => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach(audio => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", e => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch(e => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", {\n          error: e\n        }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */(MotionPreloadStrategy2 => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch(e => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0\n};\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter(hitArea => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter(hitAreaName => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach(xhr => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach(xhr => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, data => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err) return Promise.reject(err);\n    if (i <= index) return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn) return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = {\n    resourceOptions: {\n      crossorigin: options.crossOrigin\n    }\n  };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch(e => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = event => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then(data => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch(e => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then(data => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch(e => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map(tex => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, {\n        crossOrigin: context.options.crossOrigin\n      });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise(resolve => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise(resolve => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = e => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then(data => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch(e => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = e => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then(data => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch(e => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [urlToJSON, jsonToSettings, waitUntilReady, setupOptionals, setupEssentials, createInternalModel];\nLive2DFactory.motionTasksMap = /* @__PURE__ */new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function (group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function (index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach(texture => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find(file => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find(file => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map(file => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function (url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", internalModel => {\n      internalModel.once(\"destroy\", function () {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find(path => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {}\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", internalModel => {\n        internalModel.once(\"destroy\", function () {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2D) {\n  throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n}\nconst originalUpdateParam = Live2DMotion.prototype.updateParam;\nLive2DMotion.prototype.updateParam = function (model, entry) {\n  originalUpdateParam.call(this, model, entry);\n  if (entry.isFinished() && this.onFinishHandler) {\n    this.onFinishHandler(this);\n    delete this.onFinishHandler;\n  }\n};\nclass Live2DExpression extends AMotion {\n  constructor(json) {\n    super();\n    this.params = [];\n    this.setFadeIn(json.fade_in > 0 ? json.fade_in : config.expressionFadingDuration);\n    this.setFadeOut(json.fade_out > 0 ? json.fade_out : config.expressionFadingDuration);\n    if (Array.isArray(json.params)) {\n      json.params.forEach(param => {\n        const calc = param.calc || \"add\";\n        if (calc === \"add\") {\n          const defaultValue = param.def || 0;\n          param.val -= defaultValue;\n        } else if (calc === \"mult\") {\n          const defaultValue = param.def || 1;\n          param.val /= defaultValue;\n        }\n        this.params.push({\n          calc,\n          val: param.val,\n          id: param.id\n        });\n      });\n    }\n  }\n  updateParamExe(model, time, weight, motionQueueEnt) {\n    this.params.forEach(param => {\n      model.setParamFloat(param.id, param.val * weight);\n    });\n  }\n}\nclass Cubism2ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new MotionQueueManager();\n    this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex(def => def.name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.file;\n  }\n  createExpression(data, definition) {\n    return new Live2DExpression(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion);\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, dt) {\n    return this.queueManager.updateParam(model);\n  }\n}\nclass Cubism2MotionManager extends MotionManager {\n  constructor(settings, options) {\n    super(settings, options);\n    this.groups = {\n      idle: \"idle\"\n    };\n    this.motionDataType = \"arraybuffer\";\n    this.queueManager = new MotionQueueManager();\n    this.definitions = this.settings.motions;\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n    }\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  createMotion(data, group, definition) {\n    const motion = Live2DMotion.loadMotion(data);\n    const defaultFadingDuration = group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration;\n    motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n    motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.file;\n  }\n  getMotionName(definition) {\n    return definition.file;\n  }\n  getSoundFile(definition) {\n    return definition.sound;\n  }\n  _startMotion(motion, onFinish) {\n    motion.onFinishHandler = onFinish;\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion);\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.updateParam(model);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager = void 0;\n  }\n}\nclass Live2DEyeBlink {\n  constructor(coreModel) {\n    this.coreModel = coreModel;\n    this.blinkInterval = 4e3;\n    this.closingDuration = 100;\n    this.closedDuration = 50;\n    this.openingDuration = 150;\n    this.eyeState = 0;\n    this.eyeParamValue = 1;\n    this.closedTimer = 0;\n    this.nextBlinkTimeLeft = this.blinkInterval;\n    this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n    this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n  }\n  setEyeParams(value) {\n    this.eyeParamValue = clamp(value, 0, 1);\n    this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n    this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n  }\n  update(dt) {\n    switch (this.eyeState) {\n      case 0:\n        this.nextBlinkTimeLeft -= dt;\n        if (this.nextBlinkTimeLeft < 0) {\n          this.eyeState = 1;\n          this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n        }\n        break;\n      case 1:\n        this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n        if (this.eyeParamValue <= 0) {\n          this.eyeState = 2;\n          this.closedTimer = 0;\n        }\n        break;\n      case 2:\n        this.closedTimer += dt;\n        if (this.closedTimer >= this.closedDuration) {\n          this.eyeState = 3;\n        }\n        break;\n      case 3:\n        this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n        if (this.eyeParamValue >= 1) {\n          this.eyeState = 0;\n        }\n    }\n  }\n}\nconst tempMatrixArray = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nclass Cubism2InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.textureFlipY = true;\n    this.drawDataCount = 0;\n    this.disableCulling = false;\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism2MotionManager(settings, options);\n    this.eyeBlink = new Live2DEyeBlink(coreModel);\n    this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n    this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n    this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n    this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n    this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n    this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n    this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n    this.init();\n  }\n  init() {\n    super.init();\n    if (this.settings.initParams) {\n      this.settings.initParams.forEach(({\n        id,\n        value\n      }) => this.coreModel.setParamFloat(id, value));\n    }\n    if (this.settings.initOpacities) {\n      this.settings.initOpacities.forEach(({\n        id,\n        value\n      }) => this.coreModel.setPartsOpacity(id, value));\n    }\n    this.coreModel.saveParam();\n    const arr = this.coreModel.getModelContext()._$aS;\n    if (arr == null ? void 0 : arr.length) {\n      this.drawDataCount = arr.length;\n    }\n    let culling = this.coreModel.drawParamWebGL.culling;\n    Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n      set: v => culling = v,\n      get: () => this.disableCulling ? false : culling\n    });\n    const clipManager = this.coreModel.getModelContext().clipManager;\n    const originalSetupClip = clipManager.setupClip;\n    clipManager.setupClip = (modelContext, drawParam) => {\n      originalSetupClip.call(clipManager, modelContext, drawParam);\n      drawParam.gl.viewport(...this.viewport);\n    };\n  }\n  getSize() {\n    return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        let commonKey = key;\n        if (key === \"center_x\") {\n          commonKey = \"centerX\";\n        } else if (key === \"center_y\") {\n          commonKey = \"centerY\";\n        }\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  updateWebGLContext(gl, glContextID) {\n    const drawParamWebGL = this.coreModel.drawParamWebGL;\n    drawParamWebGL.firstDraw = true;\n    drawParamWebGL.setGL(gl);\n    drawParamWebGL.glno = glContextID;\n    for (const prop in drawParamWebGL) {\n      if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n        drawParamWebGL[prop] = null;\n      }\n    }\n    const clipManager = this.coreModel.getModelContext().clipManager;\n    clipManager.curFrameNo = glContextID;\n    const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    clipManager.getMaskRenderTexture();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  }\n  bindTexture(index, texture) {\n    this.coreModel.setTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a;\n    return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map(hitArea => ({\n      id: hitArea.id,\n      name: hitArea.name,\n      index: this.coreModel.getDrawDataIndex(hitArea.id)\n    }))) || [];\n  }\n  getDrawableIDs() {\n    const modelContext = this.coreModel.getModelContext();\n    const ids = [];\n    for (let i = 0; i < this.drawDataCount; i++) {\n      const drawData = modelContext.getDrawData(i);\n      if (drawData) {\n        ids.push(drawData.getDrawDataID().id);\n      }\n    }\n    return ids;\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawDataIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n      if (drawIndex === -1) throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    return this.coreModel.getTransformedPoints(drawIndex).slice();\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParam();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt, now);\n    (_c = this.physics) == null ? void 0 : _c.update(now);\n    (_d = this.pose) == null ? void 0 : _d.update(dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParam();\n  }\n  updateFocus() {\n    this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n    this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n    this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n    this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n    this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    const t = now / 1e3 * 2 * Math.PI;\n    this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n    this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n  }\n  draw(gl) {\n    const disableCulling = this.disableCulling;\n    if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n      this.disableCulling = true;\n    }\n    const matrix = this.drawingMatrix;\n    tempMatrixArray[0] = matrix.a;\n    tempMatrixArray[1] = matrix.b;\n    tempMatrixArray[4] = matrix.c;\n    tempMatrixArray[5] = matrix.d;\n    tempMatrixArray[12] = matrix.tx;\n    tempMatrixArray[13] = matrix.ty;\n    this.coreModel.setMatrix(tempMatrixArray);\n    this.coreModel.draw();\n    this.disableCulling = disableCulling;\n  }\n  destroy() {\n    super.destroy();\n    this.coreModel = void 0;\n  }\n}\nclass Cubism2ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    this.motions = {};\n    if (!Cubism2ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    this.moc = json.model;\n    copyArray(\"string\", json, this, \"textures\", \"textures\");\n    this.copy(json);\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every(item => typeof item === \"string\");\n  }\n  copy(json) {\n    copyProperty(\"string\", json, this, \"name\", \"name\");\n    copyProperty(\"string\", json, this, \"pose\", \"pose\");\n    copyProperty(\"string\", json, this, \"physics\", \"physics\");\n    copyProperty(\"object\", json, this, \"layout\", \"layout\");\n    copyProperty(\"object\", json, this, \"motions\", \"motions\");\n    copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n    copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n    copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n    copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    for (const [group, motions] of Object.entries(this.motions)) {\n      for (let i = 0; i < motions.length; i++) {\n        motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n        if (motions[i].sound !== void 0) {\n          motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n      }\n    }\n  }\n}\nconst SRC_TYPE_MAP = {\n  x: PhysicsHair.Src.SRC_TO_X,\n  y: PhysicsHair.Src.SRC_TO_Y,\n  angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n};\nconst TARGET_TYPE_MAP = {\n  x: PhysicsHair.Src.SRC_TO_X,\n  y: PhysicsHair.Src.SRC_TO_Y,\n  angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n};\nclass Live2DPhysics {\n  constructor(coreModel, json) {\n    this.coreModel = coreModel;\n    this.physicsHairs = [];\n    if (json.physics_hair) {\n      this.physicsHairs = json.physics_hair.map(definition => {\n        const physicsHair = new PhysicsHair();\n        physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n        definition.src.forEach(({\n          id,\n          ptype,\n          scale,\n          weight\n        }) => {\n          const type = SRC_TYPE_MAP[ptype];\n          if (type) {\n            physicsHair.addSrcParam(type, id, scale, weight);\n          }\n        });\n        definition.targets.forEach(({\n          id,\n          ptype,\n          scale,\n          weight\n        }) => {\n          const type = TARGET_TYPE_MAP[ptype];\n          if (type) {\n            physicsHair.addTargetParam(type, id, scale, weight);\n          }\n        });\n        return physicsHair;\n      });\n    }\n  }\n  update(elapsed) {\n    this.physicsHairs.forEach(physicsHair => physicsHair.update(this.coreModel, elapsed));\n  }\n}\nclass Live2DPartsParam {\n  constructor(id) {\n    this.id = id;\n    this.paramIndex = -1;\n    this.partsIndex = -1;\n    this.link = [];\n  }\n  initIndex(model) {\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n    model.setParamFloat(this.paramIndex, 1);\n  }\n}\nclass Live2DPose {\n  constructor(coreModel, json) {\n    this.coreModel = coreModel;\n    this.opacityAnimDuration = 500;\n    this.partsGroups = [];\n    if (json.parts_visible) {\n      this.partsGroups = json.parts_visible.map(({\n        group\n      }) => group.map(({\n        id,\n        link\n      }) => {\n        const parts = new Live2DPartsParam(id);\n        if (link) {\n          parts.link = link.map(l => new Live2DPartsParam(l));\n        }\n        return parts;\n      }));\n      this.init();\n    }\n  }\n  init() {\n    this.partsGroups.forEach(group => {\n      group.forEach(parts => {\n        parts.initIndex(this.coreModel);\n        if (parts.paramIndex >= 0) {\n          const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n          this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n          this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n          if (parts.link.length > 0) {\n            parts.link.forEach(p => p.initIndex(this.coreModel));\n          }\n        }\n      });\n    });\n  }\n  normalizePartsOpacityGroup(partsGroup, dt) {\n    const model = this.coreModel;\n    const phi = 0.5;\n    const maxBackOpacity = 0.15;\n    let visibleOpacity = 1;\n    let visibleIndex = partsGroup.findIndex(({\n      paramIndex,\n      partsIndex\n    }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n    if (visibleIndex >= 0) {\n      const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n      visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n    } else {\n      visibleIndex = 0;\n      visibleOpacity = 1;\n    }\n    partsGroup.forEach(({\n      partsIndex\n    }, index) => {\n      if (partsIndex >= 0) {\n        if (visibleIndex == index) {\n          model.setPartsOpacity(partsIndex, visibleOpacity);\n        } else {\n          let opacity = model.getPartsOpacity(partsIndex);\n          let a1;\n          if (visibleOpacity < phi) {\n            a1 = visibleOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - visibleOpacity) * phi / (1 - phi);\n          }\n          let backOp = (1 - a1) * (1 - visibleOpacity);\n          if (backOp > maxBackOpacity) {\n            a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartsOpacity(partsIndex, opacity);\n        }\n      }\n    });\n  }\n  copyOpacity(partsGroup) {\n    const model = this.coreModel;\n    partsGroup.forEach(({\n      partsIndex,\n      link\n    }) => {\n      if (partsIndex >= 0 && link) {\n        const opacity = model.getPartsOpacity(partsIndex);\n        link.forEach(({\n          partsIndex: partsIndex2\n        }) => {\n          if (partsIndex2 >= 0) {\n            model.setPartsOpacity(partsIndex2, opacity);\n          }\n        });\n      }\n    });\n  }\n  update(dt) {\n    this.partsGroups.forEach(partGroup => {\n      this.normalizePartsOpacityGroup(partGroup, dt);\n      this.copyOpacity(partGroup);\n    });\n  }\n}\nLive2DFactory.registerRuntime({\n  version: 2,\n  test(source) {\n    return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n  },\n  ready() {\n    return Promise.resolve();\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 3) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 3);\n    return String.fromCharCode(...view) === \"moc\";\n  },\n  createModelSettings(json) {\n    return new Cubism2ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const model = Live2DModelWebGL.loadModel(data);\n    const error = Live2D.getError();\n    if (error) throw error;\n    return model;\n  },\n  createInternalModel(coreModel, settings, options) {\n    return new Cubism2InternalModel(coreModel, settings, options);\n  },\n  createPose(coreModel, data) {\n    return new Live2DPose(coreModel, data);\n  },\n  createPhysics(coreModel, data) {\n    return new Live2DPhysics(coreModel, data);\n  }\n});\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {}\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, 0, 1]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([x, 0, 0, 0, 0, y, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null) return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */(CubismBlendMode2 => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {}\n}\nvar LogLevel = /* @__PURE__ */(LogLevel2 => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {};\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint) return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, \"\\n\");else if (i % 8 == 0 && i > 0) this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {}\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add:\n          {\n            model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        case ExpressionBlendType.ExpressionBlendType_Multiply:\n          {\n            model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite:\n          {\n            model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */(ExpressionBlendType2 => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find(entry => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex(def => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find(group => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find(group => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every(item => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nvar CubismMotionCurveTarget = /* @__PURE__ */(CubismMotionCurveTarget2 => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */(CubismMotionSegmentType2 => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */(EvaluationOptionFlag2 => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({\n      length: this._motionData.curveCount\n    }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({\n      length: json.getMotionTotalSegmentCount()\n    }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({\n      length: this._motionData.eventCount\n    }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n              } else {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n              }\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n              this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n              totalPointCount += 3;\n              segmentPosition += 7;\n              break;\n            }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = {\n      idle: \"Idle\"\n    };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBreath = \"ParamBreath\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */(EyeState2 => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0) ;else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */(ShaderNames2 => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5), new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5), new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5), new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5), new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map(hitArea => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1) throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map(link => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map(link => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1) {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n    this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n  }\n  setParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */(CubismPhysicsTargetType2 => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */(CubismPhysicsSource2 => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = {\n        angle: 0\n      };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0,\n      outputIndex = 0,\n      particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1:\n      {\n        const nLength = maxNormValue - middleNormValue;\n        const pLength = maxValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n    case -1:\n      {\n        const nLength = minNormValue - middleNormValue;\n        const pLength = minValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n    case 0:\n      {\n        result = middleNormValue;\n        break;\n      }\n  }\n  return isInverted ? result : result * -1;\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {}\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { Cubism2ExpressionManager, Cubism2InternalModel, Cubism2ModelSettings, Cubism2MotionManager, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, ExpressionManager, FileLoader, FocusController, InteractionMixin, InternalModel, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DExpression, Live2DEyeBlink, Live2DFactory, Live2DLoader, Live2DModel, Live2DPhysics, Live2DPose, Live2DTransform, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, cubism4Ready, folderName, logger, rand, remove, startUpCubism4 };","map":{"version":3,"names":["__pow","Math","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","x","done","then","apply","EventEmitter","url","Matrix","Transform","Point","ObservablePoint","Texture","Container","LOGICAL_WIDTH","LOGICAL_HEIGHT","CubismConfig","CubismConfig2","supportMoreMaskDivisions","setOpacityFromMotion","config","config2","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","logLevel","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","VERSION","logger","log","tag","messages","console","warn","error","clamp","num","lower","upper","rand","min","max","random","copyProperty","type","from","to","fromKey","toKey","copyArray","array","Array","isArray","filter","item","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","defineProperty","getOwnPropertyDescriptor","folderName","url2","lastSlashIndex","lastIndexOf","slice","remove","index","indexOf","splice","ExpressionManager","constructor","settings","options","expressions","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","expression","_loadExpression","Error","setRandomExpression","length","availableIndices","i","push","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","update","model","now","isFinished","updateParameters","destroy","emit","self","EPSILON","MAX_SPEED","ACCELERATION_TIME","FocusController","targetX","targetY","y","vx","vy","focus","instant","dt","dx","dy","abs","d","sqrt","maxSpeed","ax","ay","a","maxA","v","maxV","ModelSettings","json","TypeError","resolveURL","path","replaceFiles","replacer","moc","pose","physics","textures","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","includes","essentialFiles","texture","definedFiles","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","reserve","group","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","start","motion","setCurrent","complete","isActive","reset","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","keys","map","key","join","TAG$2","VOLUME","SoundManager","volume","_volume","audios","audio","add","onFinish","onError","Audio","preload","addEventListener","dispose","play","_a","catch","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionPreloadStrategy","MotionPreloadStrategy2","MotionManager","motionGroups","state","playing","idleMotionGroup","groups","idle","setupMotions","stopAllMotions","motionPreload","loadMotion","_loadMotion","startMotion","_0","_1","arguments","NORMAL","definition","currentAudio","soundURL","getSoundFile","readyToPlay","src","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","IDLE","tempBounds","width","height","InternalModel","focusController","originalWidth","originalHeight","localTransform","drawingMatrix","hitAreas","textureFlipY","viewport","setupLayout","setupHitAreas","size","getSize","layout","assign","getLayout","scale","offsetX","centerX","left","right","offsetY","centerY","top","bottom","translate","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","getDrawableVertices","updateTransform","transform","copyFrom","append","motionManager","TAG$1","NetworkError","message","status","aborted","_XHRLoader","createXHR","target","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","get","Set","set","listeners","cancelXHRs","once","open","responseType","response","onabort","onloadend","delete","abort","release","clear","WeakMap","XHRLoader","loader","context","data","result","send","runMiddlewares","middleware","dispatch","err","fn","bind","err2","Live2DLoader","load","middlewares","createTexture","textureOptions","resourceOptions","crossorigin","crossOrigin","fromURL","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","source","removeEventListener","TAG","urlToJSON","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","internalModel","tasks","createPose","coreModel","createPhysics","all","setupEssentials","live2DModel","textureLoadings","tex","createInternalModel","modelData","isValidMoc","createCoreModel","_Live2DFactory","registerRuntime","runtimes","sort","b","version","test","setupLive2DModel","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","_b","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","on","onTap","off","registerInteraction","manager","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","tempPoint","tempMatrix$1","tickerRef","Live2DModel","anchor","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","fromSync","onLoad","registerTicker","tickerClass","autoUpdate","window","PIXI","Ticker","_destroyed","shared","onTickerUpdate","_options","interactive","pivot","id","toModelPosition","tx","ty","radian","atan2","cos","sin","hitAreaNames","position","clone","skipUpdate","_recursivePostUpdateTransform","parent","_tempDisplayObjectParent","displayObjectUpdateTransform","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","renderer","plugins","interaction","batch","geometry","shader","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","gl","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","bindTexture","touched","textureGC","count","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","_FileLoader","settingsURL","filePath","resolved","filesMap","upload","fileMap","definedFile","decodeURI","actualFile","find","webkitRelativePath","URL","createObjectURL","_objectURL","createSettings","settingsFile","endsWith","settingsText","readText","settingsJSON","JSON","parse","reader","FileReader","readAsText","FileLoader","factory","File","encodeURI","objectURL","revokeObjectURL","resourceObjectURL","values","unshift","_ZipLoader","unzip","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","zipReader","paths","releaseReader","ZipLoader","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","Live2D","originalUpdateParam","Live2DMotion","updateParam","entry","call","onFinishHandler","Live2DExpression","AMotion","params","setFadeIn","fade_in","setFadeOut","fade_out","param","calc","defaultValue","val","updateParamExe","time","weight","motionQueueEnt","setParamFloat","Cubism2ExpressionManager","queueManager","MotionQueueManager","findIndex","Cubism2MotionManager","motions","defaultFadingDuration","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","tempMatrixArray","Float32Array","Cubism2InternalModel","drawDataCount","disableCulling","eyeBlink","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","initOpacities","setPartsOpacity","saveParam","arr","getModelContext","_$aS","culling","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","getCanvasWidth","getCanvasHeight","commonKey","firstDraw","setGL","glno","prop","hasOwnProperty","WebGLBuffer","curFrameNo","getParameter","FRAMEBUFFER_BINDING","getMaskRenderTexture","bindFramebuffer","FRAMEBUFFER","setTexture","getDrawDataIndex","getDrawableIDs","ids","drawData","getDrawData","getDrawDataID","getDrawableIndex","getTransformedPoints","_c","_d","motionUpdated","updateFocus","updateNaturalMovements","loadParam","addToParamFloat","t","PI","matrix","c","setMatrix","Cubism2ModelSettings","isValidJSON","copy","every","replace","entries","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","angle","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","ptype","addSrcParam","targets","addTargetParam","elapsed","Live2DPartsParam","paramIndex","partsIndex","link","initIndex","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","parts","l","visible","getParamFloat","p","normalizePartsOpacityGroup","partsGroup","phi","maxBackOpacity","visibleOpacity","visibleIndex","originalOpacity","getPartsOpacity","opacity","a1","backOp","copyOpacity","partsIndex2","partGroup","byteLength","view","Int8Array","String","fromCharCode","Live2DModelWebGL","loadModel","getError","Live2DCubismCore","CubismVector2","vector2","ret","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","getDistanceWith","dot","normalize","isEqual","rhs","isNotEqual","_CubismMath","range","cbrt","cx","isNegativeNumber","Infinity","exp","getEasingSine","degreesToRadian","degrees","radianToDegrees","directionToRadian","q1","q2","directionToDegrees","degree","radianToDirection","totalAngle","quadraticEquation","Epsilon","cardanoAlgorithmForBezier","ba","ca","da","p3","q","discriminant","center","threshold","mp3","mp33","r","cosphi","acos","crtr","t1","root12","root2","root3","u12","sd","u1","v1","root1","CubismMath","CubismMatrix44","_tr","loadIdentity","dst","n","j","k","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translateX","translateY","scaleRelative","multiplyByMatrix","m","cloneMatrix","CubismRenderer","initialize","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","R","G","B","A","getModelColor","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","isPremultipliedAlpha","setIsCulling","_isCulling","isCulling","setAnisotropy","_anisortopy","getAnisotropy","CubismTextureColor","CubismBlendMode","CubismBlendMode2","s_isStarted","s_isInitialized","s_option","Constant","vertexOffset","vertexStep","CubismFramework","startUp","option","CubismLogInfo","_isStarted","Logging","csmSetLogFunction","logFunction","Version","csmGetVersion","major","minor","patch","versionNumber","cleanUp","CubismLogWarning","staticRelease","isStarted","isInitialized","coreLogFunction","csmGetLogFunction","getLoggingLevel","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CSM_ASSERT","CubismLogDebug","fmt","args","CubismDebug","print","LogLevel_Debug","LogLevel_Info","LogLevel_Warning","CubismLogError","LogLevel_Error","format","logPrint","buffer","dumpBytes","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","fadeIn","getFadeInStartTime","fadeOut","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","DefaultFadeTime","CubismExpressionMotion","_parameters","create","fadeInTime","FadeInTime","fadeOutTime","FadeOutTime","parameters","Parameters","parameterId","Id","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","parameter","addParameterValueById","multiplyParameterValueById","setParameterValueById","ExpressionBlendType2","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_userTimeSeconds","_eventCustomData","_motions","autoDelete","InvalidMotionQueueEntryHandleValue","isFinishedByHandle","motionQueueEntryNumber","getCubismMotionQueueEntry","setEventCallback","callback","customData","_eventCallBack","doUpdateMotion","updated","firedList","i2","Cubism4ExpressionManager","Name","CubismModelSettingsJson","Groups","HitAreas","Layout","FileReferences","Moc","Expressions","Motions","Textures","Physics","Pose","getEyeBlinkParameters","Ids","getLipSyncParameters","Cubism4ModelSettings","Sound","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","events","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","EvaluationOptionFlag2","EffectNameEyeBlink","EffectNameLipSync","TargetNameModel","TargetNameParameter","TargetNamePartOpacity","UseOldBeziersCurveMotion","lerpPoints","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","parameterIndex","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","getParameterIndex","sourceValue","getParameterValueByIndex","fin","fout","paramWeight","setParameterValueByIndex","getParameterValueById","CubismMotionCurveTarget_PartOpacity","setPartOpacityById","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","areBeziersRestructed","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeBallX","ParamEyeBallY","ParamBodyAngleX","ParamBreath","CubismBreath","_breathParameters","_currentTime","setParameters","breathParameters","getParameters","deltaTimeSeconds","offset","peak","cycle","BreathParameterData","_CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_blinkingState","EyeState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","CubismEyeBlink","EyeState2","csmRect","w","h","getCenterX","getCenterY","getRight","getBottom","setRect","expand","ColorChannelCount","shaderCount","s_instance","s_viewport","s_fbo","CubismClippingManager_WebGL","getChannelFlagAsColor","channelNo","_channelColors","_maskTexture","frameNo","_currentFrameNo","_clippingMaskBufferSize","_colorBuffer","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableIndex","drawableVertexCount","getDrawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","_maskRenderTexture","_clippingContextListForMask","_clippingContextListForDraw","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","deleteFramebuffer","deleteTexture","drawableCount","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","usingClipCount","clipIndex","cc","preDraw","setupLayoutBounds","clearColor","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","getDrawableDynamicFlagVertexPositionsDidChange","getDrawableCulling","setClippingContextBufferForMask","drawMesh","getDrawableTextureIndices","getDrawableVertexIndexCount","getDrawableVertexIndices","getDrawableVertexUvs","getDrawableOpacity","CubismBlendMode_Normal","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","getInstance","deleteInstance","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","generateShaders","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","masked","ShaderNames_NormalPremultipliedAlpha","ONE","CubismBlendMode_Additive","ShaderNames_AddPremultipliedAlpha","CubismBlendMode_Multiplicative","ShaderNames_MultPremultipliedAlpha","TEXTURE1","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","linkStatus","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","createShader","compileShader","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","_textures","_sortedDrawableIndexList","_bufferData","isUsingMasking","getDrawableCount","getDrawableMasks","getDrawableMaskCounts","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","getDrawableRenderOrders","order","getDrawableDynamicFlagIsVisible","setClippingContextBufferForDraw","getDrawableBlendMode","getDrawableInvertedMaskBit","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","drawElements","TRIANGLES","UNSIGNED_SHORT","doStaticRelease","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","tempMatrix","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","canvasinfo","CanvasWidth","CanvasHeight","charAt","toLowerCase","PixelsPerUnit","getDrawableIds","prepend","saveParameters","loadParameters","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","setTimeout","LogLevel_Verbose","DefaultFadeInSeconds","CubismPose","pose3json","_fadeTimeSeconds","poseListInfo","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","linkListInfo","Link","linkCount","linkIndex","linkPart","_partGroups","_partGroupCounts","_lastModel","beginIndex","partGroupCount","doFade","copyPartOpacities","partIndex","setPartOpacityByIndex","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","backOpacityThreshold","backOpacity","assignment","getPartIndex","clonePartData","CubismModel","drawables","resetDynamicFlags","parameterCount","savedParameterCount","_savedParameters","_parameterValues","partCount","_partIds","_notExistPartId","_notExistPartOpacities","getPartCount","_partOpacities","getPartOpacityById","_notExistParameterId","_notExistParameterValues","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","addParameterValueByIndex","multiplyParameterValueByIndex","_drawableIds","drawableId","getDrawableId","renderOrders","textureIndices","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","indexCounts","vertexCounts","getDrawableVertexPositions","indices","vertexPositions","vertexUvs","opacities","constantFlags","hasIsDoubleSidedBit","hasBlendAdditiveBit","hasBlendMultiplicativeBit","hasIsInvertedMaskBit","masks","maskCounts","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","CubismMoc","mocBytes","fromArrayBuffer","createModel","cubismModel","Model","fromMoc","_moc","_modelCount","deleteModel","_release","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","CubismPhysicsParticle","initialPosition","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","destination","translationScale","CubismPhysicsRig","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagX","PhysicsTypeTagY","PhysicsTypeTagAngle","AirResistance","MaximumWeight","MovementThreshold","CubismPhysics","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","updateParticles","particleCount","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","getOption","Options","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getRangeValue","getDefaultValue","minValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","nLength","pLength","__moc","ignored","coreModelWithMoc","releaseMoc"],"sources":["/Users/zhouchenghan/python/TTS-Systeam/web-tts/node_modules/pixi-live2d-display/dist/index.es.js"],"sourcesContent":["var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2D) {\n  throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n}\nconst originalUpdateParam = Live2DMotion.prototype.updateParam;\nLive2DMotion.prototype.updateParam = function(model, entry) {\n  originalUpdateParam.call(this, model, entry);\n  if (entry.isFinished() && this.onFinishHandler) {\n    this.onFinishHandler(this);\n    delete this.onFinishHandler;\n  }\n};\nclass Live2DExpression extends AMotion {\n  constructor(json) {\n    super();\n    this.params = [];\n    this.setFadeIn(json.fade_in > 0 ? json.fade_in : config.expressionFadingDuration);\n    this.setFadeOut(json.fade_out > 0 ? json.fade_out : config.expressionFadingDuration);\n    if (Array.isArray(json.params)) {\n      json.params.forEach((param) => {\n        const calc = param.calc || \"add\";\n        if (calc === \"add\") {\n          const defaultValue = param.def || 0;\n          param.val -= defaultValue;\n        } else if (calc === \"mult\") {\n          const defaultValue = param.def || 1;\n          param.val /= defaultValue;\n        }\n        this.params.push({\n          calc,\n          val: param.val,\n          id: param.id\n        });\n      });\n    }\n  }\n  updateParamExe(model, time, weight, motionQueueEnt) {\n    this.params.forEach((param) => {\n      model.setParamFloat(param.id, param.val * weight);\n    });\n  }\n}\nclass Cubism2ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new MotionQueueManager();\n    this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.file;\n  }\n  createExpression(data, definition) {\n    return new Live2DExpression(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion);\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, dt) {\n    return this.queueManager.updateParam(model);\n  }\n}\nclass Cubism2MotionManager extends MotionManager {\n  constructor(settings, options) {\n    super(settings, options);\n    this.groups = { idle: \"idle\" };\n    this.motionDataType = \"arraybuffer\";\n    this.queueManager = new MotionQueueManager();\n    this.definitions = this.settings.motions;\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n    }\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  createMotion(data, group, definition) {\n    const motion = Live2DMotion.loadMotion(data);\n    const defaultFadingDuration = group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration;\n    motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n    motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.file;\n  }\n  getMotionName(definition) {\n    return definition.file;\n  }\n  getSoundFile(definition) {\n    return definition.sound;\n  }\n  _startMotion(motion, onFinish) {\n    motion.onFinishHandler = onFinish;\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion);\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.updateParam(model);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager = void 0;\n  }\n}\nclass Live2DEyeBlink {\n  constructor(coreModel) {\n    this.coreModel = coreModel;\n    this.blinkInterval = 4e3;\n    this.closingDuration = 100;\n    this.closedDuration = 50;\n    this.openingDuration = 150;\n    this.eyeState = 0;\n    this.eyeParamValue = 1;\n    this.closedTimer = 0;\n    this.nextBlinkTimeLeft = this.blinkInterval;\n    this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n    this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n  }\n  setEyeParams(value) {\n    this.eyeParamValue = clamp(value, 0, 1);\n    this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n    this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n  }\n  update(dt) {\n    switch (this.eyeState) {\n      case 0:\n        this.nextBlinkTimeLeft -= dt;\n        if (this.nextBlinkTimeLeft < 0) {\n          this.eyeState = 1;\n          this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n        }\n        break;\n      case 1:\n        this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n        if (this.eyeParamValue <= 0) {\n          this.eyeState = 2;\n          this.closedTimer = 0;\n        }\n        break;\n      case 2:\n        this.closedTimer += dt;\n        if (this.closedTimer >= this.closedDuration) {\n          this.eyeState = 3;\n        }\n        break;\n      case 3:\n        this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n        if (this.eyeParamValue >= 1) {\n          this.eyeState = 0;\n        }\n    }\n  }\n}\nconst tempMatrixArray = new Float32Array([\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1\n]);\nclass Cubism2InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.textureFlipY = true;\n    this.drawDataCount = 0;\n    this.disableCulling = false;\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism2MotionManager(settings, options);\n    this.eyeBlink = new Live2DEyeBlink(coreModel);\n    this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n    this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n    this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n    this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n    this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n    this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n    this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n    this.init();\n  }\n  init() {\n    super.init();\n    if (this.settings.initParams) {\n      this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n    }\n    if (this.settings.initOpacities) {\n      this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n    }\n    this.coreModel.saveParam();\n    const arr = this.coreModel.getModelContext()._$aS;\n    if (arr == null ? void 0 : arr.length) {\n      this.drawDataCount = arr.length;\n    }\n    let culling = this.coreModel.drawParamWebGL.culling;\n    Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n      set: (v) => culling = v,\n      get: () => this.disableCulling ? false : culling\n    });\n    const clipManager = this.coreModel.getModelContext().clipManager;\n    const originalSetupClip = clipManager.setupClip;\n    clipManager.setupClip = (modelContext, drawParam) => {\n      originalSetupClip.call(clipManager, modelContext, drawParam);\n      drawParam.gl.viewport(...this.viewport);\n    };\n  }\n  getSize() {\n    return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        let commonKey = key;\n        if (key === \"center_x\") {\n          commonKey = \"centerX\";\n        } else if (key === \"center_y\") {\n          commonKey = \"centerY\";\n        }\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  updateWebGLContext(gl, glContextID) {\n    const drawParamWebGL = this.coreModel.drawParamWebGL;\n    drawParamWebGL.firstDraw = true;\n    drawParamWebGL.setGL(gl);\n    drawParamWebGL.glno = glContextID;\n    for (const prop in drawParamWebGL) {\n      if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n        drawParamWebGL[prop] = null;\n      }\n    }\n    const clipManager = this.coreModel.getModelContext().clipManager;\n    clipManager.curFrameNo = glContextID;\n    const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    clipManager.getMaskRenderTexture();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  }\n  bindTexture(index, texture) {\n    this.coreModel.setTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a;\n    return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.id,\n      name: hitArea.name,\n      index: this.coreModel.getDrawDataIndex(hitArea.id)\n    }))) || [];\n  }\n  getDrawableIDs() {\n    const modelContext = this.coreModel.getModelContext();\n    const ids = [];\n    for (let i = 0; i < this.drawDataCount; i++) {\n      const drawData = modelContext.getDrawData(i);\n      if (drawData) {\n        ids.push(drawData.getDrawDataID().id);\n      }\n    }\n    return ids;\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawDataIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    return this.coreModel.getTransformedPoints(drawIndex).slice();\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParam();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt, now);\n    (_c = this.physics) == null ? void 0 : _c.update(now);\n    (_d = this.pose) == null ? void 0 : _d.update(dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParam();\n  }\n  updateFocus() {\n    this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n    this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n    this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n    this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n    this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    const t = now / 1e3 * 2 * Math.PI;\n    this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n    this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n  }\n  draw(gl) {\n    const disableCulling = this.disableCulling;\n    if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n      this.disableCulling = true;\n    }\n    const matrix = this.drawingMatrix;\n    tempMatrixArray[0] = matrix.a;\n    tempMatrixArray[1] = matrix.b;\n    tempMatrixArray[4] = matrix.c;\n    tempMatrixArray[5] = matrix.d;\n    tempMatrixArray[12] = matrix.tx;\n    tempMatrixArray[13] = matrix.ty;\n    this.coreModel.setMatrix(tempMatrixArray);\n    this.coreModel.draw();\n    this.disableCulling = disableCulling;\n  }\n  destroy() {\n    super.destroy();\n    this.coreModel = void 0;\n  }\n}\nclass Cubism2ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    this.motions = {};\n    if (!Cubism2ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    this.moc = json.model;\n    copyArray(\"string\", json, this, \"textures\", \"textures\");\n    this.copy(json);\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every((item) => typeof item === \"string\");\n  }\n  copy(json) {\n    copyProperty(\"string\", json, this, \"name\", \"name\");\n    copyProperty(\"string\", json, this, \"pose\", \"pose\");\n    copyProperty(\"string\", json, this, \"physics\", \"physics\");\n    copyProperty(\"object\", json, this, \"layout\", \"layout\");\n    copyProperty(\"object\", json, this, \"motions\", \"motions\");\n    copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n    copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n    copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n    copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    for (const [group, motions] of Object.entries(this.motions)) {\n      for (let i = 0; i < motions.length; i++) {\n        motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n        if (motions[i].sound !== void 0) {\n          motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n      }\n    }\n  }\n}\nconst SRC_TYPE_MAP = {\n  x: PhysicsHair.Src.SRC_TO_X,\n  y: PhysicsHair.Src.SRC_TO_Y,\n  angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n};\nconst TARGET_TYPE_MAP = {\n  x: PhysicsHair.Src.SRC_TO_X,\n  y: PhysicsHair.Src.SRC_TO_Y,\n  angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n};\nclass Live2DPhysics {\n  constructor(coreModel, json) {\n    this.coreModel = coreModel;\n    this.physicsHairs = [];\n    if (json.physics_hair) {\n      this.physicsHairs = json.physics_hair.map((definition) => {\n        const physicsHair = new PhysicsHair();\n        physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n        definition.src.forEach(({ id, ptype, scale, weight }) => {\n          const type = SRC_TYPE_MAP[ptype];\n          if (type) {\n            physicsHair.addSrcParam(type, id, scale, weight);\n          }\n        });\n        definition.targets.forEach(({ id, ptype, scale, weight }) => {\n          const type = TARGET_TYPE_MAP[ptype];\n          if (type) {\n            physicsHair.addTargetParam(type, id, scale, weight);\n          }\n        });\n        return physicsHair;\n      });\n    }\n  }\n  update(elapsed) {\n    this.physicsHairs.forEach((physicsHair) => physicsHair.update(this.coreModel, elapsed));\n  }\n}\nclass Live2DPartsParam {\n  constructor(id) {\n    this.id = id;\n    this.paramIndex = -1;\n    this.partsIndex = -1;\n    this.link = [];\n  }\n  initIndex(model) {\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n    model.setParamFloat(this.paramIndex, 1);\n  }\n}\nclass Live2DPose {\n  constructor(coreModel, json) {\n    this.coreModel = coreModel;\n    this.opacityAnimDuration = 500;\n    this.partsGroups = [];\n    if (json.parts_visible) {\n      this.partsGroups = json.parts_visible.map(({ group }) => group.map(({ id, link }) => {\n        const parts = new Live2DPartsParam(id);\n        if (link) {\n          parts.link = link.map((l) => new Live2DPartsParam(l));\n        }\n        return parts;\n      }));\n      this.init();\n    }\n  }\n  init() {\n    this.partsGroups.forEach((group) => {\n      group.forEach((parts) => {\n        parts.initIndex(this.coreModel);\n        if (parts.paramIndex >= 0) {\n          const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n          this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n          this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n          if (parts.link.length > 0) {\n            parts.link.forEach((p) => p.initIndex(this.coreModel));\n          }\n        }\n      });\n    });\n  }\n  normalizePartsOpacityGroup(partsGroup, dt) {\n    const model = this.coreModel;\n    const phi = 0.5;\n    const maxBackOpacity = 0.15;\n    let visibleOpacity = 1;\n    let visibleIndex = partsGroup.findIndex(({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n    if (visibleIndex >= 0) {\n      const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n      visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n    } else {\n      visibleIndex = 0;\n      visibleOpacity = 1;\n    }\n    partsGroup.forEach(({ partsIndex }, index) => {\n      if (partsIndex >= 0) {\n        if (visibleIndex == index) {\n          model.setPartsOpacity(partsIndex, visibleOpacity);\n        } else {\n          let opacity = model.getPartsOpacity(partsIndex);\n          let a1;\n          if (visibleOpacity < phi) {\n            a1 = visibleOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - visibleOpacity) * phi / (1 - phi);\n          }\n          let backOp = (1 - a1) * (1 - visibleOpacity);\n          if (backOp > maxBackOpacity) {\n            a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartsOpacity(partsIndex, opacity);\n        }\n      }\n    });\n  }\n  copyOpacity(partsGroup) {\n    const model = this.coreModel;\n    partsGroup.forEach(({ partsIndex, link }) => {\n      if (partsIndex >= 0 && link) {\n        const opacity = model.getPartsOpacity(partsIndex);\n        link.forEach(({ partsIndex: partsIndex2 }) => {\n          if (partsIndex2 >= 0) {\n            model.setPartsOpacity(partsIndex2, opacity);\n          }\n        });\n      }\n    });\n  }\n  update(dt) {\n    this.partsGroups.forEach((partGroup) => {\n      this.normalizePartsOpacityGroup(partGroup, dt);\n      this.copyOpacity(partGroup);\n    });\n  }\n}\nLive2DFactory.registerRuntime({\n  version: 2,\n  test(source) {\n    return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n  },\n  ready() {\n    return Promise.resolve();\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 3) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 3);\n    return String.fromCharCode(...view) === \"moc\";\n  },\n  createModelSettings(json) {\n    return new Cubism2ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const model = Live2DModelWebGL.loadModel(data);\n    const error = Live2D.getError();\n    if (error)\n      throw error;\n    return model;\n  },\n  createInternalModel(coreModel, settings, options) {\n    return new Cubism2InternalModel(coreModel, settings, options);\n  },\n  createPose(coreModel, data) {\n    return new Live2DPose(coreModel, data);\n  },\n  createPhysics(coreModel, data) {\n    return new Live2DPhysics(coreModel, data);\n  }\n});\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBreath = \"ParamBreath\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1) {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n    this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n  }\n  setParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { Cubism2ExpressionManager, Cubism2InternalModel, Cubism2ModelSettings, Cubism2MotionManager, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, ExpressionManager, FileLoader, FocusController, InteractionMixin, InternalModel, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DExpression, Live2DEyeBlink, Live2DFactory, Live2DLoader, Live2DModel, Live2DPhysics, Live2DPose, Live2DTransform, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, cubism4Ready, folderName, logger, rand, remove, startUpCubism4 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}