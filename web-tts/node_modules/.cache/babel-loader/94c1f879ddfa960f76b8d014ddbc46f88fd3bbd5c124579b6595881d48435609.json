{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\python\\\\TTS-systeam\\\\voice\\\\web-tts\\\\src\\\\compoment\\\\page\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { Live2DModel, MotionPreloadStrategy } from 'pixi-live2d-display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Live2DComponent() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // 确保 canvas 元素存在\n    if (canvasRef.current) {\n      const app = new PIXI.Application({\n        backgroundAlpha: 0,\n        view: canvasRef.current,\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      // 加载 Live2D 模型\n      Live2DModel.from('live2d/shizuku.model.json', {\n        autoInteract: false,\n        motionPreload: MotionPreloadStrategy.IDLE\n      }).then(model => {\n        app.stage.addChild(model);\n\n        // 设置模型的初始位置和大小\n        model.anchor.set(0.5, 0.5);\n        model.scale.set(0.5, 0.5);\n        model.position.set(app.screen.width / 2, app.screen.height / 2);\n\n        // 添加交互逻辑\n        canvasRef.current.addEventListener('pointerdown', event => {\n          model.focus(event.clientX, event.clientY);\n          model.tap(event.clientX, event.clientY);\n        });\n        canvasRef.current.addEventListener('pointermove', event => {\n          if (event.buttons === 1) {\n            model.focus(event.clientX, event.clientY);\n          }\n        });\n\n        // 添加其他事件处理...\n      });\n      return () => {\n        app.destroy(true, {\n          children: true\n        });\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_s(Live2DComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Live2DComponent;\nexport default Live2DComponent;\nvar _c;\n$RefreshReg$(_c, \"Live2DComponent\");","map":{"version":3,"names":["React","useEffect","useRef","PIXI","Live2DModel","MotionPreloadStrategy","jsxDEV","_jsxDEV","Live2DComponent","_s","canvasRef","current","app","Application","backgroundAlpha","view","width","window","innerWidth","height","innerHeight","from","autoInteract","motionPreload","IDLE","then","model","stage","addChild","anchor","set","scale","position","screen","addEventListener","event","focus","clientX","clientY","tap","buttons","destroy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/python/TTS-systeam/voice/web-tts/src/compoment/page/test.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Live2DModel, MotionPreloadStrategy } from 'pixi-live2d-display';\r\n\r\nfunction Live2DComponent() {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 确保 canvas 元素存在\r\n    if (canvasRef.current) {\r\n      const app = new PIXI.Application({\r\n        backgroundAlpha: 0,\r\n        view: canvasRef.current,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n\r\n      // 加载 Live2D 模型\r\n      Live2DModel.from('live2d/shizuku.model.json', {\r\n        autoInteract: false,\r\n        motionPreload: MotionPreloadStrategy.IDLE,\r\n      }).then(model => {\r\n        app.stage.addChild(model);\r\n\r\n        // 设置模型的初始位置和大小\r\n        model.anchor.set(0.5, 0.5);\r\n        model.scale.set(0.5, 0.5);\r\n        model.position.set(app.screen.width / 2, app.screen.height / 2);\r\n\r\n        // 添加交互逻辑\r\n        canvasRef.current.addEventListener('pointerdown', event => {\r\n          model.focus(event.clientX, event.clientY);\r\n          model.tap(event.clientX, event.clientY);\r\n        });\r\n\r\n        canvasRef.current.addEventListener('pointermove', event => {\r\n          if (event.buttons === 1) {\r\n            model.focus(event.clientX, event.clientY);\r\n          }\r\n        });\r\n\r\n        // 添加其他事件处理...\r\n      });\r\n\r\n      return () => {\r\n        app.destroy(true, { children: true });\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n}\r\n\r\nexport default Live2DComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,IAAI,MAAM,SAAS;AAC/B,SAASC,WAAW,EAAEC,qBAAqB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,GAAG,GAAG,IAAIT,IAAI,CAACU,WAAW,CAAC;QAC/BC,eAAe,EAAE,CAAC;QAClBC,IAAI,EAAEL,SAAS,CAACC,OAAO;QACvBK,KAAK,EAAEC,MAAM,CAACC,UAAU;QACxBC,MAAM,EAAEF,MAAM,CAACG;MACjB,CAAC,CAAC;;MAEF;MACAhB,WAAW,CAACiB,IAAI,CAAC,2BAA2B,EAAE;QAC5CC,YAAY,EAAE,KAAK;QACnBC,aAAa,EAAElB,qBAAqB,CAACmB;MACvC,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,IAAI;QACfd,GAAG,CAACe,KAAK,CAACC,QAAQ,CAACF,KAAK,CAAC;;QAEzB;QACAA,KAAK,CAACG,MAAM,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QAC1BJ,KAAK,CAACK,KAAK,CAACD,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QACzBJ,KAAK,CAACM,QAAQ,CAACF,GAAG,CAAClB,GAAG,CAACqB,MAAM,CAACjB,KAAK,GAAG,CAAC,EAAEJ,GAAG,CAACqB,MAAM,CAACd,MAAM,GAAG,CAAC,CAAC;;QAE/D;QACAT,SAAS,CAACC,OAAO,CAACuB,gBAAgB,CAAC,aAAa,EAAEC,KAAK,IAAI;UACzDT,KAAK,CAACU,KAAK,CAACD,KAAK,CAACE,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC;UACzCZ,KAAK,CAACa,GAAG,CAACJ,KAAK,CAACE,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC;QACzC,CAAC,CAAC;QAEF5B,SAAS,CAACC,OAAO,CAACuB,gBAAgB,CAAC,aAAa,EAAEC,KAAK,IAAI;UACzD,IAAIA,KAAK,CAACK,OAAO,KAAK,CAAC,EAAE;YACvBd,KAAK,CAACU,KAAK,CAACD,KAAK,CAACE,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC;UAC3C;QACF,CAAC,CAAC;;QAEF;MACF,CAAC,CAAC;MAEF,OAAO,MAAM;QACX1B,GAAG,CAAC6B,OAAO,CAAC,IAAI,EAAE;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MACvC,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOnC,OAAA;IAAQoC,GAAG,EAAEjC;EAAU;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC;AAACtC,EAAA,CA/CQD,eAAe;AAAAwC,EAAA,GAAfxC,eAAe;AAiDxB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}