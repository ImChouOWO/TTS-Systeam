{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\python\\\\TTS-systeam\\\\voice\\\\web-tts\\\\src\\\\compoment\\\\page\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioURL, setAudioURL] = useState('');\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    recorder.onstart = () => setRecording(true);\n    recorder.onstop = () => setRecording(false);\n    recorder.ondataavailable = async e => {\n      const url = URL.createObjectURL(e.data);\n      setAudioURL(url);\n      // 可以在這裡將e.data發送到伺服器或進行其他處理\n    };\n    recorder.start();\n    setMediaRecorder(recorder);\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n  };\n  recorder.ondataavailable = async e => {\n    const audioBlob = e.data;\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'recording.wav');\n    fetch('http://localhost:5000/upload', {\n      // Flask伺服器的URL\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // 處理伺服器回應\n    }).catch(error => {\n      console.error('錯誤:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: recording ? stopRecording : startRecording,\n      children: recording ? '停止錄音' : '開始錄音'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), audioURL && /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: audioURL,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioRecorder, \"E3qp3sm7Ax9bE2eQQoJodWdDy3c=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AudioRecorder","_s","recording","setRecording","mediaRecorder","setMediaRecorder","audioURL","setAudioURL","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","onstart","onstop","ondataavailable","e","url","URL","createObjectURL","data","start","stopRecording","stop","audioBlob","formData","FormData","append","fetch","method","body","then","response","json","console","log","catch","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/python/TTS-systeam/voice/web-tts/src/compoment/page/AudioRecorder.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AudioRecorder = () => {\r\n    const [recording, setRecording] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [audioURL, setAudioURL] = useState('');\r\n\r\n    const startRecording = async () => {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const recorder = new MediaRecorder(stream);\r\n        recorder.onstart = () => setRecording(true);\r\n        recorder.onstop = () => setRecording(false);\r\n        recorder.ondataavailable = async (e) => {\r\n            const url = URL.createObjectURL(e.data);\r\n            setAudioURL(url);\r\n            // 可以在這裡將e.data發送到伺服器或進行其他處理\r\n        };\r\n        recorder.start();\r\n        setMediaRecorder(recorder);\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        mediaRecorder.stop();\r\n    };\r\n\r\n    recorder.ondataavailable = async (e) => {\r\n        const audioBlob = e.data;\r\n        const formData = new FormData();\r\n        formData.append('file', audioBlob, 'recording.wav');\r\n    \r\n        fetch('http://localhost:5000/upload', { // Flask伺服器的URL\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            // 處理伺服器回應\r\n        })\r\n        .catch(error => {\r\n            console.error('錯誤:', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={recording ? stopRecording : startRecording}>\r\n                {recording ? '停止錄音' : '開始錄音'}\r\n            </button>\r\n            {audioURL && <audio src={audioURL} controls />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC1CK,QAAQ,CAACE,OAAO,GAAG,MAAMb,YAAY,CAAC,IAAI,CAAC;IAC3CW,QAAQ,CAACG,MAAM,GAAG,MAAMd,YAAY,CAAC,KAAK,CAAC;IAC3CW,QAAQ,CAACI,eAAe,GAAG,MAAOC,CAAC,IAAK;MACpC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,CAAC,CAACI,IAAI,CAAC;MACvChB,WAAW,CAACa,GAAG,CAAC;MAChB;IACJ,CAAC;IACDN,QAAQ,CAACU,KAAK,CAAC,CAAC;IAChBnB,gBAAgB,CAACS,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxBrB,aAAa,CAACsB,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDZ,QAAQ,CAACI,eAAe,GAAG,MAAOC,CAAC,IAAK;IACpC,MAAMQ,SAAS,GAAGR,CAAC,CAACI,IAAI;IACxB,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,SAAS,EAAE,eAAe,CAAC;IAEnDI,KAAK,CAAC,8BAA8B,EAAE;MAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACV,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACX,IAAI,IAAI;MACVc,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;MACjB;IACJ,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,KAAK,EAAEA,KAAK,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EAED,oBACIzC,OAAA;IAAA0C,QAAA,gBACI1C,OAAA;MAAQ2C,OAAO,EAAExC,SAAS,GAAGuB,aAAa,GAAGjB,cAAe;MAAAiC,QAAA,EACvDvC,SAAS,GAAG,MAAM,GAAG;IAAM;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACRxC,QAAQ,iBAAIP,OAAA;MAAOgD,GAAG,EAAEzC,QAAS;MAAC0C,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAC7C,EAAA,CAlDID,aAAa;AAAAiD,EAAA,GAAbjD,aAAa;AAoDnB,eAAeA,aAAa;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}