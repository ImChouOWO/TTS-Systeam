{"ast":null,"code":"class TimeLimiter {\n  /** @param maxMilliseconds - The maximum milliseconds that can be spent preparing items each frame. */\n  constructor(maxMilliseconds) {\n    this.maxMilliseconds = maxMilliseconds, this.frameStart = 0;\n  }\n  /** Resets any counting properties to start fresh on a new frame. */\n  beginFrame() {\n    this.frameStart = Date.now();\n  }\n  /**\n   * Checks to see if another item can be uploaded. This should only be called once per item.\n   * @returns - If the item is allowed to be uploaded.\n   */\n  allowedToUpload() {\n    return Date.now() - this.frameStart < this.maxMilliseconds;\n  }\n}\nexport { TimeLimiter };","map":{"version":3,"names":["TimeLimiter","constructor","maxMilliseconds","frameStart","beginFrame","Date","now","allowedToUpload"],"sources":["C:\\Users\\Owner\\Desktop\\python\\TTS-systeam\\voice\\web-tts\\node_modules\\pixi.js\\node_modules\\@pixi\\prepare\\src\\TimeLimiter.ts"],"sourcesContent":["/**\n * TimeLimiter limits the number of items handled by a {@link PIXI.BasePrepare} to a specified\n * number of milliseconds per frame.\n * @memberof PIXI\n */\nexport class TimeLimiter\n{\n    /** The maximum milliseconds that can be spent preparing items each frame. */\n    public maxMilliseconds: number;\n\n    /**\n     * The start time of the current frame.\n     * @readonly\n     */\n    public frameStart: number;\n\n    /** @param maxMilliseconds - The maximum milliseconds that can be spent preparing items each frame. */\n    constructor(maxMilliseconds: number)\n    {\n        this.maxMilliseconds = maxMilliseconds;\n        this.frameStart = 0;\n    }\n\n    /** Resets any counting properties to start fresh on a new frame. */\n    beginFrame(): void\n    {\n        this.frameStart = Date.now();\n    }\n\n    /**\n     * Checks to see if another item can be uploaded. This should only be called once per item.\n     * @returns - If the item is allowed to be uploaded.\n     */\n    allowedToUpload(): boolean\n    {\n        return Date.now() - this.frameStart < this.maxMilliseconds;\n    }\n}\n"],"mappings":"AAKO,MAAMA,WAAA,CACb;EAAA;EAWIC,YAAYC,eAAA,EACZ;IACS,KAAAA,eAAA,GAAkBA,eAAA,EACvB,KAAKC,UAAA,GAAa;EACtB;EAAA;EAGAC,WAAA,EACA;IACS,KAAAD,UAAA,GAAaE,IAAA,CAAKC,GAAA;EAC3B;EAAA;AAAA;AAAA;AAAA;EAMAC,gBAAA,EACA;IACI,OAAOF,IAAA,CAAKC,GAAA,CAAQ,SAAKH,UAAA,GAAa,KAAKD,eAAA;EAC/C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}