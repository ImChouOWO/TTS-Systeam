{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\python\\\\TTS-systeam\\\\TTS-Systeam\\\\web-tts\\\\src\\\\compoment\\\\page\\\\audioPlayer.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioPlayer(props) {\n  _s();\n  const {\n    shouldPlay,\n    userID\n  } = props;\n  const audioRef = useRef(null);\n  const audioSource = `/voice/main_video_${userID}.wav`;\n  useEffect(() => {\n    if (shouldPlay && audioRef.current) {\n      audioRef.current.src = audioSource; // 設置音樂源\n      audioRef.current.play().then(() => {\n        console.log(\"Audio is now playing\");\n        props.onPlayed(); // 通知 MainPage 音樂已播放\n      }).catch(error => {\n        console.error(\"Audio playback failed:\", error);\n      });\n    }\n  }, [shouldPlay, audioSource]);\n  return /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: audioSource,\n      type: \"audio/mpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(AudioPlayer, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["AudioPlayer","props","_s","shouldPlay","userID","audioRef","useRef","audioSource","useEffect","current","src","play","then","console","log","onPlayed","catch","error","_jsxDEV","ref","preload","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/python/TTS-systeam/TTS-Systeam/web-tts/src/compoment/page/audioPlayer.js"],"sourcesContent":["function AudioPlayer(props) {\n    const { shouldPlay, userID } = props;\n    const audioRef = useRef(null);\n    const audioSource = `/voice/main_video_${userID}.wav`;\n\n    useEffect(() => {\n        if (shouldPlay && audioRef.current) {\n            audioRef.current.src = audioSource;  // 設置音樂源\n            audioRef.current.play()\n                .then(() => {\n                    console.log(\"Audio is now playing\");\n                    props.onPlayed();  // 通知 MainPage 音樂已播放\n                })\n                .catch(error => {\n                    console.error(\"Audio playback failed:\", error);\n                });\n        }\n    }, [shouldPlay, audioSource]);\n\n    return (\n        <audio ref={audioRef} preload=\"auto\">\n            <source src={audioSource} type=\"audio/mpeg\" />\n        </audio>\n    );\n}\n"],"mappings":";;;AAAA,SAASA,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAGH,KAAK;EACpC,MAAMI,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMC,WAAW,GAAI,qBAAoBH,MAAO,MAAK;EAErDI,SAAS,CAAC,MAAM;IACZ,IAAIL,UAAU,IAAIE,QAAQ,CAACI,OAAO,EAAE;MAChCJ,QAAQ,CAACI,OAAO,CAACC,GAAG,GAAGH,WAAW,CAAC,CAAE;MACrCF,QAAQ,CAACI,OAAO,CAACE,IAAI,CAAC,CAAC,CAClBC,IAAI,CAAC,MAAM;QACRC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCb,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAE;MACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACd,UAAU,EAAEI,WAAW,CAAC,CAAC;EAE7B,oBACIW,OAAA;IAAOC,GAAG,EAAEd,QAAS;IAACe,OAAO,EAAC,MAAM;IAAAC,QAAA,eAChCH,OAAA;MAAQR,GAAG,EAAEH,WAAY;MAACe,IAAI,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEhB;AAACxB,EAAA,CAxBQF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}