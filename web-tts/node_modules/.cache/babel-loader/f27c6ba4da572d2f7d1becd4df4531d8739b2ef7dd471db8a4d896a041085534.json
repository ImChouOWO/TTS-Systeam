{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { Live2DModel, MotionPreloadStrategy } from 'pixi-live2d-display';\nfunction Live2DComponent({\n  parentRef\n}) {\n  _s();\n  useEffect(() => {\n    if (parentRef.current) {\n      const {\n        offsetWidth,\n        offsetHeight\n      } = parentRef.current;\n      const app = new PIXI.Application({\n        width: offsetWidth,\n        height: offsetHeight,\n        backgroundAlpha: 0,\n        autoDensity: true,\n        resolution: window.devicePixelRatio || 1\n      });\n      parentRef.current.appendChild(app.view);\n      Live2DModel.from('/live2d/shizuku.model.json', {\n        autoInteract: false,\n        motionPreload: MotionPreloadStrategy.IDLE\n      }).then(model => {\n        app.stage.addChild(model);\n        model.anchor.set(0.5, 0.5);\n        model.scale.set(0.2, 0.2);\n        model.position.set(offsetWidth / 3, offsetHeight / 2);\n\n        // Event listeners for interaction\n        app.view.addEventListener('pointerdown', event => {\n          // Your interaction logic\n        });\n        app.view.addEventListener('pointermove', event => {\n          // Your interaction logic\n        });\n      });\n      return () => {\n        app.destroy(true, {\n          children: true\n        });\n      };\n    }\n  }, [parentRef]); // Only re-run the effect if parentRef changes\n\n  // Since the canvas is appended to parentRef, we don't need to return anything here\n  return null;\n}\n_s(Live2DComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Live2DComponent;\nexport default Live2DComponent;\nvar _c;\n$RefreshReg$(_c, \"Live2DComponent\");","map":{"version":3,"names":["React","useEffect","useRef","PIXI","Live2DModel","MotionPreloadStrategy","Live2DComponent","parentRef","_s","current","offsetWidth","offsetHeight","app","Application","width","height","backgroundAlpha","autoDensity","resolution","window","devicePixelRatio","appendChild","view","from","autoInteract","motionPreload","IDLE","then","model","stage","addChild","anchor","set","scale","position","addEventListener","event","destroy","children","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/python/TTS-systeam/voice/web-tts/src/compoment/page/live2d.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Live2DModel, MotionPreloadStrategy } from 'pixi-live2d-display';\r\n\r\nfunction Live2DComponent({ parentRef }) {\r\n  useEffect(() => {\r\n    if (parentRef.current) {\r\n      const { offsetWidth, offsetHeight } = parentRef.current;\r\n      const app = new PIXI.Application({\r\n        width: offsetWidth,\r\n        height: offsetHeight,\r\n        backgroundAlpha: 0,\r\n        autoDensity: true,\r\n        resolution: window.devicePixelRatio || 1,\r\n      });\r\n      parentRef.current.appendChild(app.view);\r\n\r\n      Live2DModel.from('/live2d/shizuku.model.json', {\r\n        autoInteract: false,\r\n        motionPreload: MotionPreloadStrategy.IDLE\r\n      }).then(model => {\r\n        app.stage.addChild(model);\r\n        model.anchor.set(0.5, 0.5);\r\n        model.scale.set(0.2, 0.2);\r\n        model.position.set(offsetWidth / 3, offsetHeight / 2);\r\n\r\n        // Event listeners for interaction\r\n        app.view.addEventListener('pointerdown', (event) => {\r\n          // Your interaction logic\r\n        });\r\n\r\n        app.view.addEventListener('pointermove', (event) => {\r\n          // Your interaction logic\r\n        });\r\n      });\r\n\r\n      return () => {\r\n        app.destroy(true, { children: true });\r\n      };\r\n    }\r\n  }, [parentRef]); // Only re-run the effect if parentRef changes\r\n\r\n  // Since the canvas is appended to parentRef, we don't need to return anything here\r\n  return null;\r\n}\r\n\r\nexport default Live2DComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,IAAI,MAAM,SAAS;AAC/B,SAASC,WAAW,EAAEC,qBAAqB,QAAQ,qBAAqB;AAExE,SAASC,eAAeA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtCP,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,CAACE,OAAO,EAAE;MACrB,MAAM;QAAEC,WAAW;QAAEC;MAAa,CAAC,GAAGJ,SAAS,CAACE,OAAO;MACvD,MAAMG,GAAG,GAAG,IAAIT,IAAI,CAACU,WAAW,CAAC;QAC/BC,KAAK,EAAEJ,WAAW;QAClBK,MAAM,EAAEJ,YAAY;QACpBK,eAAe,EAAE,CAAC;QAClBC,WAAW,EAAE,IAAI;QACjBC,UAAU,EAAEC,MAAM,CAACC,gBAAgB,IAAI;MACzC,CAAC,CAAC;MACFb,SAAS,CAACE,OAAO,CAACY,WAAW,CAACT,GAAG,CAACU,IAAI,CAAC;MAEvClB,WAAW,CAACmB,IAAI,CAAC,4BAA4B,EAAE;QAC7CC,YAAY,EAAE,KAAK;QACnBC,aAAa,EAAEpB,qBAAqB,CAACqB;MACvC,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,IAAI;QACfhB,GAAG,CAACiB,KAAK,CAACC,QAAQ,CAACF,KAAK,CAAC;QACzBA,KAAK,CAACG,MAAM,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QAC1BJ,KAAK,CAACK,KAAK,CAACD,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QACzBJ,KAAK,CAACM,QAAQ,CAACF,GAAG,CAACtB,WAAW,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,CAAC;;QAErD;QACAC,GAAG,CAACU,IAAI,CAACa,gBAAgB,CAAC,aAAa,EAAGC,KAAK,IAAK;UAClD;QAAA,CACD,CAAC;QAEFxB,GAAG,CAACU,IAAI,CAACa,gBAAgB,CAAC,aAAa,EAAGC,KAAK,IAAK;UAClD;QAAA,CACD,CAAC;MACJ,CAAC,CAAC;MAEF,OAAO,MAAM;QACXxB,GAAG,CAACyB,OAAO,CAAC,IAAI,EAAE;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MACvC,CAAC;IACH;EACF,CAAC,EAAE,CAAC/B,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB;EACA,OAAO,IAAI;AACb;AAACC,EAAA,CAxCQF,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA0CxB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}